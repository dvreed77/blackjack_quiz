{"version":3,"sources":["components/Button.js","components/PlayingCard.js","utils.js","components/Layout.js","App.js","serviceWorker.js","index.js"],"names":["styled","button","_templateObject","img","PlayingCard_templateObject","valMap","2","3","4","5","6","7","8","9","10","jack","queen","king","ace","decisionMap","17","11","16","15","14","13","12","checkDecision","decision","player","dealer","playerValueTotal","cards","reduce","a","b","value","console","log","playerValue","dealerValue","algoDecision","getRandomCard","suit","sample","keys","fname","concat","drawDealer","card1","card2","drawPlayer","Container","div","Layout_templateObject","Title","h1","_templateObject2","Row","_templateObject3","process","App","state","isCorrect","select","_this$state","_this","setState","_this2","this","_this$state2","react_default","createElement","PlayingCard","width","src","alt","Button","onClick","map","d","i","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e4b0625e.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport default styled.button`\n  margin-right: 5px;\n  line-height: 1.499;\n  display: inline-block;\n  font-weight: 400;\n  text-align: center;\n  touch-action: manipulation;\n  cursor: pointer;\n  background-image: none;\n  border: 1px solid transparent;\n  white-space: nowrap;\n  padding: 0 15px;\n  font-size: 16px;\n  border-radius: 4px;\n  height: 32px;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);\n  position: relative;\n  box-shadow: 0 2px 0 rgba(0, 0, 0, 0.015);\n  color: rgba(0, 0, 0, 0.65);\n  background-color: #fff;\n  border-color: #d9d9d9;\n`\n\n","import styled from 'styled-components'\n\nexport default styled.img`\n  border: 1px solid #afafaf;\n  border-radius: 4px;\n  padding: 7px 5px;\n`","import { keys, sample } from 'lodash'\n\nconst valMap = {\n  '2': 2, \n  '3': 3,\n  '4': 4,\n  '5': 5,\n  '6': 6,\n  '7': 7,\n  '8': 8,\n  '9': 9,\n  '10': 10,\n  'jack': 10,\n  'queen': 10,\n  'king': 10,\n  'ace': 11\n}\n\nconst decisionMap = {\n  17: {2: 'STAY', 3: 'STAY', 4: 'STAY', 5: 'STAY', 6: 'STAY', 7: 'STAY', 8: 'STAY', 9: 'STAY', 10: 'STAY', 11: 'STAY'},\n  16: {2: 'STAY', 3: 'STAY', 4: 'STAY', 5: 'STAY', 6: 'STAY', 7: 'HIT', 8: 'HIT', 9: 'HIT', 10: 'HIT', 11: 'HIT'},\n  15: {2: 'STAY', 3: 'STAY', 4: 'STAY', 5: 'STAY', 6: 'STAY', 7: 'HIT', 8: 'HIT', 9: 'HIT', 10: 'HIT', 11: 'HIT'},\n  14: {2: 'STAY', 3: 'STAY', 4: 'STAY', 5: 'STAY', 6: 'STAY', 7: 'HIT', 8: 'HIT', 9: 'HIT', 10: 'HIT', 11: 'HIT'},\n  13: {2: 'STAY', 3: 'STAY', 4: 'STAY', 5: 'STAY', 6: 'STAY', 7: 'HIT', 8: 'HIT', 9: 'HIT', 10: 'HIT', 11: 'HIT'},\n  12: {2: 'HIT', 3: 'HIT', 4: 'STAY', 5: 'STAY', 6: 'STAY', 7: 'HIT', 8: 'HIT', 9: 'HIT', 10: 'HIT', 11: 'HIT'},\n  11: {2: 'DBL', 3: 'DBL', 4: 'DBL', 5: 'DBL', 6: 'DBL', 7: 'DBL', 8: 'DBL', 9: 'DBL', 10: 'DBL', 11: 'DBL'},\n  10: {2: 'DBL', 3: 'DBL', 4: 'DBL', 5: 'DBL', 6: 'DBL', 7: 'DBL', 8: 'DBL', 9: 'DBL', 10: 'HIT', 11: 'HIT'},\n  9: {2: 'HIT', 3: 'DBL', 4: 'DBL', 5: 'DBL', 6: 'DBL', 7: 'HIT', 8: 'HIT', 9: 'HIT', 10: 'HIT', 11: 'HIT'},\n  8: {2: 'HIT', 3: 'HIT', 4: 'HIT', 5: 'HIT', 6: 'HIT', 7: 'HIT', 8: 'HIT', 9: 'HIT', 10: 'HIT', 11: 'HIT'}\n}\n\nconst checkDecision = (decision, player, dealer) => {\n\n  const playerValueTotal = player.cards.reduce((a,b) => (a + b.value), 0)\n\n  console.log(playerValueTotal, player.cards)\n  const playerValue = playerValueTotal < 8 ? 8 : (playerValueTotal > 17 ? 17 : playerValueTotal)\n  const dealerValue = dealer.value\n\n  const algoDecision = decisionMap[playerValue][dealerValue]\n\n  const algoDecision2 = algoDecision === 'DBL' ? 'HIT' : algoDecision\n\n  return algoDecision2 == decision\n}\n\nconst getRandomCard = () => {\n  const suit = sample(['clubs', 'spades', 'diamonds', 'hearts'])\n  const value = sample(keys(valMap))\n\n  return {\n    value: valMap[value],\n    fname: `${value}_of_${suit}.png`\n  }\n}\n\nconst drawDealer = () => {\n  return getRandomCard()\n}\n\nconst drawPlayer = () => {\n  const card1 = getRandomCard()\n  const card2 = getRandomCard()\n\n  return {\n    card1,\n    card2,\n    value: card1.value + card2.value\n  }\n}\n\n\n\n\n\nconsole.log(getRandomCard())\nconsole.log(drawDealer())\nconsole.log(drawPlayer())\n\n\nexport {\n  getRandomCard,\n  drawDealer,\n  drawPlayer,\n  checkDecision\n}","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  width: 60%;\n  margin: 0 auto;\n`\n\nexport const Title = styled.h1`\n  text-align: center;\n`\n\nexport const Row = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`","import React, { Component } from 'react';\nimport Button from './components/Button';\nimport PlayingCard from './components/PlayingCard'\nimport './App.css';\nimport {getRandomCard, drawPlayer, drawDealer, checkDecision} from './utils'\nimport {Title, Container, Row} from './components/Layout'\n\nconst rootUrl = process.env.PUBLIC_URL\n\nconsole.log(rootUrl)\nclass App extends Component {\n  state = {\n    dealer: drawDealer(),\n    player: {cards: [getRandomCard(), getRandomCard()]},\n    isCorrect: null\n  }\n  select = (decision) => {\n    console.log(decision)\n\n    const {dealer, player} = this.state\n\n    const isCorrect = checkDecision(decision, player, dealer)\n\n    this.setState({\n      dealer: drawDealer(),\n      player: {cards: [getRandomCard(), getRandomCard()]},\n      isCorrect\n    })\n  }\n  render() {\n    const {dealer, player, isCorrect} = this.state\n\n    return (\n      <Container>\n        <Title>Dealer</Title>\n        <Row>\n          <PlayingCard width='100' src={`/cards/${dealer.fname}`} alt=\"\"/>\n        </Row>\n\n        <Row>\n          <Button onClick={() => this.select('HIT')}>HIT</Button>\n          <Button onClick={() => this.select('STAY')}>STAY</Button>\n          <Button onClick={() => this.select('SPLIT')}>SPLIT</Button>\n        </Row>\n        <Row>\n          {isCorrect ? 'TRUE' : 'FALSE'}\n        </Row>\n        \n\n        <Title>Player</Title>\n        <Row>\n          {player.cards.map((d,i) => (\n              <PlayingCard width='100' src={`${rootUrl}/cards/${d.fname}`} alt=\"\"/>\n            ))\n          }\n        </Row>\n        \n        <div>\n          {/* {player.cards.reduce} */}\n        </div>       \n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}